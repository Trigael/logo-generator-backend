name: pipeline

on:
  push:
    branches:
      - "main"

permissions:
  contents: read
  packages: write

jobs:
  run-tests:
    if: github.ref == 'refs/heads/main'
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: '18'
      - name: Install dependencies
        run: npm ci --force
      - name: Run tests
        run: npm run test

  build-and-push-image:
    if: github.ref == 'refs/heads/main'
    runs-on: ubuntu-latest
    needs:
      - run-tests
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Log in to the Container registry
        uses: docker/login-action@v3
        with:
          registry: https://ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and push Docker image
        uses: docker/build-push-action@v6
        with:
          context: .
          push: true
          tags: |
            ghcr.io/trigael/ai-logo-generator:latest
            ghcr.io/trigael/ai-logo-generator:${{ github.sha }}

  deploy:
    if: github.ref == 'refs/heads/main'
    runs-on: ubuntu-latest
    needs:
      - build-and-push-image
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Setup SSH key
        run: |
          mkdir -p ~/.ssh
          echo "${{ secrets.DEPLOY_SSH_PRIVATE_KEY }}" > ~/.ssh/id_ed25519
          chmod 600 ~/.ssh/id_ed25519

      - name: Test SSH connection
        run: ssh -o StrictHostKeyChecking=no deploy@78.47.30.210 "echo âœ… SSH success"

      - name: Create env file
        run: echo "GIT_COMMIT_HASH=${{ github.sha }}" >> ./envfile

      - name: Generate docker-stack file with commit-specific secrets
        run: |
          cp docker-stack.yaml docker-stack.generated.yaml
          sed -i "s/\${GITHUB_SHA}/${{ github.sha }}/g" docker-stack.generated.yaml

      - name: Push Docker secrets to server
        env:
          GIT_COMMIT_HASH: ${{ github.sha }}
          AI_TOOL_KEY: ${{ secrets.AI_TOOL_KEY }}
          FRONTEND_URL: ${{ secrets.FRONTEND_URL }}
          BACKEND_URL: ${{ secrets.BACKEND_URL }}
          REDIS_URL: ${{ secrets.REDIS_URL }}
          STRIPE_PUBLISHABLE_KEY: ${{ secrets.STRIPE_PUBLISHABLE_KEY }}
          STRIPE_SECRET_KEY: ${{ secrets.STRIPE_SECRET_KEY }}
          MAILJET_API_KEY: ${{ secrets.MAILJET_API_KEY }}
          MAILJET_API_SECRET: ${{ secrets.MAILJET_API_SECRET }}
          MAILJET_FROM_EMAIL: ${{ secrets.MAILJET_FROM_EMAIL }}
          MAILJET_TEMPLATE_ID: ${{ secrets.MAILJET_TEMPLATE_ID }}
          SENTRY_DSN: ${{ secrets.SENTRY_DSN }}
          LOKI_USERNAME: ${{ secrets.LOKI_USERNAME }}
          LOKI_PASSWORD: ${{ secrets.LOKI_PASSWORD }}
          DB_TRANSACTION_URL: ${{ secrets.DB_TRANSACTION_URL }}
        run: |
          ssh -o StrictHostKeyChecking=no deploy@78.47.30.210 "
            set -e

            echo '${{ secrets.AI_TOOL_KEY }}' | docker secret create AI_TOOL_KEY_${{ github.sha }} -
            echo '${{ secrets.FRONTEND_URL }}' | docker secret create FRONTEND_URL_${{ github.sha }} -
            echo '${{ secrets.BACKEND_URL }}' | docker secret create BACKEND_URL_${{ github.sha }} -
            echo '${{ secrets.REDIS_URL }}' | docker secret create REDIS_URL_${{ github.sha }} -
            echo '${{ secrets.STRIPE_PUBLISHABLE_KEY }}' | docker secret create STRIPE_PUBLISHABLE_KEY_${{ github.sha }} -
            echo '${{ secrets.STRIPE_SECRET_KEY }}' | docker secret create STRIPE_SECRET_KEY_${{ github.sha }} -
            echo '${{ secrets.MAILJET_API_KEY }}' | docker secret create MAILJET_API_KEY_${{ github.sha }} -
            echo '${{ secrets.MAILJET_API_SECRET }}' | docker secret create MAILJET_API_SECRET_${{ github.sha }} -
            echo '${{ secrets.MAILJET_FROM_EMAIL }}' | docker secret create MAILJET_FROM_EMAIL_${{ github.sha }} -
            echo '${{ secrets.MAILJET_TEMPLATE_ID }}' | docker secret create MAILJET_TEMPLATE_ID_${{ github.sha }} -
            echo '${{ secrets.SENTRY_DSN }}' | docker secret create SENTRY_DSN_${{ github.sha }} -
            echo '${{ secrets.LOKI_USERNAME }}' | docker secret create LOKI_USERNAME_${{ github.sha }} -
            echo '${{ secrets.LOKI_PASSWORD }}' | docker secret create LOKI_PASSWORD_${{ github.sha }} -
            echo '${{ secrets.DB_TRANSACTION_URL }}' | docker secret create DB_TRANSACTION_URL_${{ github.sha }} -
          "

      - name: Docker Stack Deploy
        uses: cssnr/stack-deploy-action@v1
        with:
          name: ai-logo-generator
          file: docker-stack.generated.yaml
          host: 78.47.30.210
          user: deploy
          ssh_key: ${{ secrets.DEPLOY_SSH_PRIVATE_KEY }}
          env_file: ./envfile
