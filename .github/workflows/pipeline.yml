name: pipeline

on:
  push:
    branches:
      - "main"

permissions:
  contents: read
  packages: write

jobs:
  run-tests:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: '18'
      - name: Install dependencies
        run: npm ci --force
      - name: Run tests
        run: npm run test

  build-and-push-image:
    runs-on: ubuntu-latest
    needs:
      - run-tests
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Log in to the Container registry
        uses: docker/login-action@v3
        with:
          registry: https://ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and push Docker image
        uses: docker/build-push-action@v6
        with:
          context: .
          push: true
          tags: |
            ghcr.io/trigael/ai-logo-generator:latest
            ghcr.io/trigael/ai-logo-generator:${{ github.sha }}

  deploy:
    runs-on: ubuntu-latest
    needs:
      - build-and-push-image
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Create env file
        run: echo "GIT_COMMIT_HASH=${{ github.sha }}" >> ./envfile

      - name: Push Docker secrets to server
        run: |
          ssh -o StrictHostKeyChecking=no deploy@ai-logo-generator.site << 'EOF'
            set -e

            docker secret rm LOGO_GENERATOR_TOOL_API_KEY 2>/dev/null || true
            echo "$LOGO_GENERATOR_TOOL_API_KEY" | docker secret create LOGO_GENERATOR_TOOL_API_KEY -

            docker secret rm FRONTEND_URL 2>/dev/null || true
            echo "$FRONTEND_URL" | docker secret create FRONTEND_URL -

            docker secret rm BACKEND_URL 2>/dev/null || true
            echo "$BACKEND_URL" | docker secret create BACKEND_URL -

            docker secret rm REDIS_URL 2>/dev/null || true
            echo "$REDIS_URL" | docker secret create REDIS_URL -

            docker secret rm STRIPE_LOGO_PRODUCT_ID 2>/dev/null || true
            echo "$STRIPE_LOGO_PRODUCT_ID" | docker secret create STRIPE_LOGO_PRODUCT_ID -

            docker secret rm STRIPE_PUBLISHABLE_KEY 2>/dev/null || true
            echo "$STRIPE_PUBLISHABLE_KEY" | docker secret create STRIPE_PUBLISHABLE_KEY -

            docker secret rm STRIPE_SECRET_KEY 2>/dev/null || true
            echo "$STRIPE_SECRET_KEY" | docker secret create STRIPE_SECRET_KEY -

            docker secret rm MAILJET_API_KEY 2>/dev/null || true
            echo "$MAILJET_API_KEY" | docker secret create MAILJET_API_KEY -

            docker secret rm MAILJET_API_SECRET 2>/dev/null || true
            echo "$MAILJET_API_SECRET" | docker secret create MAILJET_API_SECRET -

            docker secret rm MAILJET_FROM_EMAIL 2>/dev/null || true
            echo "$MAILJET_FROM_EMAIL" | docker secret create MAILJET_FROM_EMAIL -

            docker secret rm MAILJET_TEMPLATE_ID 2>/dev/null || true
            echo "$MAILJET_TEMPLATE_ID" | docker secret create MAILJET_TEMPLATE_ID -

            docker secret rm SENTRY_DSN 2>/dev/null || true
            echo "$SENTRY_DSN" | docker secret create SENTRY_DSN -

            docker secret rm LOKI_USERNAME 2>/dev/null || true
            echo "$LOKI_USERNAME" | docker secret create LOKI_USERNAME -

            docker secret rm LOKI_PASSWORD 2>/dev/null || true
            echo "$LOKI_PASSWORD" | docker secret create LOKI_PASSWORD -

            docker secret rm DATABASE_TRANSACTION_URL 2>/dev/null || true
            echo "$DATABASE_TRANSACTION_URL" | docker secret create DATABASE_TRANSACTION_URL -
          EOF
        env:
          LOGO_GENERATOR_TOOL_API_KEY: ${{ secrets.LOGO_GENERATOR_TOOL_API_KEY }}
          FRONTEND_URL: ${{ secrets.FRONTEND_URL }}
          BACKEND_URL: ${{ secrets.BACKEND_URL }}
          REDIS_URL: ${{ secrets.REDIS_URL }}
          STRIPE_LOGO_PRODUCT_ID: ${{ secrets.STRIPE_LOGO_PRODUCT_ID }}
          STRIPE_PUBLISHABLE_KEY: ${{ secrets.STRIPE_PUBLISHABLE_KEY }}
          STRIPE_SECRET_KEY: ${{ secrets.STRIPE_SECRET_KEY }}
          MAILJET_API_KEY: ${{ secrets.MAILJET_API_KEY }}
          MAILJET_API_SECRET: ${{ secrets.MAILJET_API_SECRET }}
          MAILJET_FROM_EMAIL: ${{ secrets.MAILJET_FROM_EMAIL }}
          MAILJET_TEMPLATE_ID: ${{ secrets.MAILJET_TEMPLATE_ID }}
          SENTRY_DSN: ${{ secrets.SENTRY_DSN }}
          LOKI_USERNAME: ${{ secrets.LOKI_USERNAME }}
          LOKI_PASSWORD: ${{ secrets.LOKI_PASSWORD }}
          DATABASE_TRANSACTION_URL: ${{ secrets.DATABASE_TRANSACTION_URL }}

      - name: Docker Stack Deploy
        uses: cssnr/stack-deploy-action@v1
        with:
          name: ai-logo-generator
          file: docker-stack.yaml
          host: ai-logo-generator.site
          user: deploy
          ssh_key: ${{ secrets.DEPLOY_SSH_PRIVATE_KEY }}
          env_file: ./envfile
